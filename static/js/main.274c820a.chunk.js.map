{"version":3,"sources":["components/workoutItem/WorkoutItem.jsx","utilits/dateSort.js","components/workoutsList/WorkoutsList.jsx","components/addWorkout/AddWorkout.jsx","components/workouts/Workouts.jsx","App.js","reportWebVitals.js","index.js"],"names":["WorkoutItem","workout","onDelete","onEdit","id","date","distance","className","onClick","dateSort","a","b","split","WorkoutsList","workouts","sort","map","shortid","require","AddWorkout","onAdd","workoutEdit","useState","form","setForm","Object","keys","length","onAddWorkout","e","target","name","value","prevForm","onSubmit","preventDefault","trim","Number","generate","onChange","type","Workouts","setWorkouts","edit","setEdit","filter","o","some","prevWorkout","item","find","el","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.274c820a.chunk.js","sourcesContent":["import './workoutItem.css';\nimport PropTypes from 'prop-types';\n\nfunction WorkoutItem({ workout, onDelete, onEdit }) {\n    const { id, date, distance } = workout;\n\n    return (\n        <li className=\"item\">\n            <span>{date}</span>\n            <span>{distance}</span>\n            <div>\n                <button onClick={() => onEdit(id)}>✎</button>\n                <button onClick={() => onDelete(id)}>✗</button>\n            </div>\n        </li>\n    )   \n}\n\nWorkoutItem.propTypes = {\n    workout: PropTypes.object,\n    onDelete: PropTypes.func,\n    onEdit: PropTypes.func\n}\n\nexport default WorkoutItem","function dateSort(a, b) {\n    a = a.split('.');\n    b = b.split('.');\n    return b[2] - a[2] || b[1] - a[1] || b[0] - a[0];\n}\n\nexport default dateSort","import WorkoutItem from '../workoutItem/WorkoutItem';\nimport './workoutList.css'\nimport dateSort from '../../utilits/dateSort';\nimport PropTypes from 'prop-types';\n\nfunction WorkoutsList({ workouts, onDelete, onEdit }) {\n\n    return (\n        <>\n        <div className=\"list__title\">\n            <span>Дата (ДД.ММ.ГГ)</span>\n            <span>Пройдено км</span>\n            <span>Действия</span>\n        </div>\n        <ul className=\"list\">\n            {workouts\n            .sort((a, b) => dateSort(a.date, b.date))\n            .map((workout) => <WorkoutItem key={workout.id} workout={workout} onDelete={onDelete} onEdit={onEdit} />)}\n        </ul>\n        </>\n    )    \n}\n\nWorkoutsList.propTypes = {\n    workouts: PropTypes.array,\n    onDelete: PropTypes.func,\n    onEdit: PropTypes.func\n}\n\nexport default WorkoutsList","import './addWorkout.css';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nconst shortid = require('shortid');\n\nfunction AddWorkout({ onAdd, workoutEdit }) {\n    const [form, setForm] = useState({ date: '', distance: '' });\n    \n\n    if (Object.keys(workoutEdit).length !== 0 && form.id !== workoutEdit.id) {\n        setForm({ id: workoutEdit.id, date: workoutEdit.date, distance: workoutEdit.distance})\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (form.date.trim() === '' || form.date.length !== 8 ) return null\n        if (form.distance.trim() === '' || !Number(form.distance)) return null\n\n        const workout = { id: shortid.generate(), ...form };\n        onAdd(workout)\n        setForm({ date: '', distance: '' })\n    }\n\n    const onAddWorkout = (e) => {\n        const { name, value } = e.target;\n        setForm(prevForm => ({...prevForm, [name]: value}));   \n    }\n\n    return (\n        <form className=\"form\" onSubmit={handleSubmit}>\n            <label>\n                <span>Дата (ДД.ММ.ГГ)</span>\n                <input className=\"input\" name=\"date\" value={form.date} onChange={onAddWorkout}></input>\n            </label>\n            <label>\n                <span>Пройдено км</span>\n                <input className=\"input\" name=\"distance\" value={form.distance} onChange={onAddWorkout}></input>\n            </label>\n            <button className=\"ok\" type=\"submit\">OK</button>    \n        </form>\n    )    \n}\n\nAddWorkout.propTypes = {\n    onAdd: PropTypes.func,\n    workoutEdit: PropTypes.object\n}\n\nexport default AddWorkout","import { useState } from 'react';\nimport WorkoutsList from '../workoutsList/WorkoutsList';\nimport AddWorkout from '../addWorkout/AddWorkout';\n\nfunction Workouts() {\n    const [workouts, setWorkouts] = useState([]);\n    const [edit, setEdit] = useState({});\n    const handleAdd = workout => {\n        setEdit({})\n        if (workouts.some(o => o.date === workout.date)) {\n            setWorkouts(prevWorkout => prevWorkout.map(o => {\n                if (o.date === workout.date) {\n                    return {id: workout.id, date: o.date, distance: +o.distance + +workout.distance}\n                }\n                return o\n            }))   \n        } else {\n            setWorkouts(prevWorkout => [...prevWorkout, workout])\n        }\n    };\n\n    const onDelete = id => {setWorkouts(workouts.filter(o => o.id !== id))}\n\n    const onEdit = id => {\n        const item = workouts.find(el => el.id === id);\n        setEdit(item)\n        onDelete(id)\n    }\n\n    return (\n        <>   \n        <AddWorkout onAdd={handleAdd} workoutEdit={edit} />\n        <WorkoutsList workouts={workouts} onDelete={onDelete} onEdit={onEdit} />\n        </>\n    )\n}\n\nexport default Workouts","import './App.css';\nimport Workouts from './components/workouts/Workouts';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Workouts />    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}